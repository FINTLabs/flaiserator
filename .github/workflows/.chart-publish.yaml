name: Publish Chart

on:
  workflow_call:
    inputs:
      app-version:
        description: "The version of the application"
        type: string
        required: true
      chart-version:
        description: "The version of the Helm chart"
        type: string
        required: true
      chart-name:
        description: "The name of the chart"
        type: string
        required: true


jobs:
  chart-meta:
    name: Apply Chart Metadata
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update Chart.yaml
        uses: mikefarah/yq@v4
        with:
          cmd: |
            yq e -i '.version = "${{ inputs.chart-version }}"' ./charts/${{ inputs.chart-name }}/Chart.yaml
            yq e -i '.appVersion = "${{ inputs.app-version }}"' ./charts/${{ inputs.chart-name }}/Chart.yaml

      - name: Save Chart Meta
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.chart-name }}-chart-metadata
          path: ./charts/${{ inputs.chart-name }}/Chart.yaml

  publish-chart:
    name: Publish Helm Chart
    needs: chart-meta
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore Chart Metadata
        uses: actions/download-artifact@v4.1.9
        with:
          name: ${{ inputs.chart-name }}-chart-metadata
          path: ./charts/${{ inputs.chart-name }}

      - uses: azure/setup-helm@v4
        name: Setup Helm

      - name: Login to Flais Helm Repository
        run: echo "${{ secrets.FLAIS_HELM_PASSWORD }}" | helm registry login ${{ vars.FLAIS_HELM_ENDPOINT }} --username ${{ vars.FLAIS_HELM_USERNAME }} --password-stdin

      - name: Build Charts
        run: |
          helm package ./charts/${{ inputs.chart-name }} -d ./charts/${{ inputs.chart-name }}

      - name: Push Charts
        run: |
          helm push ./charts/${{ inputs.chart-name }}/*.tgz oci://${{ vars.FLAIS_HELM_ENDPOINT }}/helm